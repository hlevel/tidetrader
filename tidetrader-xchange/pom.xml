<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- Parent -->
    <parent>
        <groupId>tide.trader</groupId>
        <artifactId>tidetrader</artifactId>
        <version>${revision}</version>
    </parent>
    <!-- =========================================================================================================== -->
    <!-- Project information -->
    <artifactId>tidetrader-xchange</artifactId>
    <version>${tidetrader.xchange.version}</version>
    <name>tidetrader-xchange</name>

    <packaging>pom</packaging>
    <description>Market Hedge Http is a Java library providing a simple and consistent API for interacting with
        a diverse set of cryptocurrency exchanges.
    </description>
    <!-- =========================================================================================================== -->

    <developers>
        <developer>
            <name>Jing bao</name>
            <email>pwn2ownyearn@gmail.com</email>
        </developer>
    </developers>

    <modules>
        <module>tidetrader-xchange-core</module>
        <module>tidetrader-xchange-binance</module>
        <module>tidetrader-xchange-simulated</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <assertj.version>3.21.0</assertj.version>
        <version.commons.lang3.version>3.12.0</version.commons.lang3.version>
        <fasterxml.version>2.13.1</fasterxml.version>
        <github.mmazi.version>2.1.0</github.mmazi.version>
        <resilience4j.version>1.7.0</resilience4j.version>
        <junit.version>4.13.2</junit.version>
        <lombok.version>1.18.22</lombok.version>
        <knowm.xchart.version>3.8.1</knowm.xchart.version>
        <qos.logback.version>1.2.10</qos.logback.version>
        <reflections.version>0.10.2</reflections.version>
        <slf4j.version>1.7.36</slf4j.version>
        <crypto.version>5.0.0</crypto.version>
        <java-jwt.version>3.19.1</java-jwt.version>

        <skipIntegrationTests>true</skipIntegrationTests>
    </properties>

    <dependencyManagement>
    <dependencies>

      <!-- Rest client -->
      <dependency>
        <groupId>com.github.mmazi</groupId>
        <artifactId>rescu</artifactId>
        <version>${github.mmazi.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>io.github.resilience4j</groupId>
        <artifactId>resilience4j-all</artifactId>
        <version>${resilience4j.version}</version>
      </dependency>

      <!--For String Joining, etc. -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${version.commons.lang3.version}</version>
      </dependency>

      <!-- Charting -->
      <dependency>
        <groupId>org.knowm.xchart</groupId>
        <artifactId>xchart</artifactId>
        <version>${knowm.xchart.version}</version>
      </dependency>

      <!-- Reflections - java runtime metadata analysis for integration testing -->
      <dependency>
        <groupId>org.reflections</groupId>
        <artifactId>reflections</artifactId>
        <version>${reflections.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-csv</artifactId>
        <version>${fasterxml.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${fasterxml.version}</version>
      </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${fasterxml.version}</version>
        </dependency>
      <dependency>
        <groupId>org.web3j</groupId>
        <artifactId>crypto</artifactId>
        <version>${crypto.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>31.1-jre</version>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.github.tomakehurst</groupId>
        <artifactId>wiremock-jre8</artifactId>
        <version>2.32.0</version>
        <scope>test</scope>
      </dependency>

      <!-- SLF4J implementation for use in examples -->
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${qos.logback.version}</version>
      </dependency>

      <!-- Lombok for boilerplate -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- jwt for auth -->
      <dependency>
        <groupId>com.auth0</groupId>
        <artifactId>java-jwt</artifactId>
        <version>${java-jwt.version}</version>
      </dependency>

      <!-- for streaming-->
      <dependency>
        <groupId>io.reactivex.rxjava2</groupId>
        <artifactId>rxjava</artifactId>
        <version>2.2.21</version>
      </dependency>
      <dependency>
        <groupId>com.pubnub</groupId>
        <artifactId>pubnub-gson</artifactId>
        <version>4.31.3</version>
      </dependency>
        <!-- Netty version compatible with service-wamp -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.75.Final</version>
        </dependency>

    </dependencies>

  </dependencyManagement>

    <!-- All children will have these dependencies -->
  <dependencies>
    <!-- Logging is through SLF4J -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <!-- javax APIs -->
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
    </dependency>

    <!-- SLF4J implementation for use in examples -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- JUnit for testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

    <distributionManagement>
    <snapshotRepository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>sonatype-nexus-staging</id>
      <name>Nexus Release Repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <downloadUrl>https://oss.sonatype.org/content/groups/public/org/knowm/xchange</downloadUrl>
  </distributionManagement>

    <!--
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipSource>false</skipSource>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <quiet>true</quiet>
                    <skip>false</skip>
                    <doclint>none</doclint>
                    <source>${java.version}</source>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <skipTests>${skipIntegrationTests}</skipTests>
                    <includes>
                        <include>**/*Integration.java</include>
                    </includes>
                </configuration>
            </plugin>
        </plugins>
    </build>
    -->

</project>